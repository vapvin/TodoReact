{"version":3,"sources":["GlobalStyles.js","Components/TodoBox.js","TodoContext.js","Components/TodoHeader.js","Components/TodoItem.js","Components/TodoList.js","Components/TodoCreate.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","TodoBoxBlock","styled","div","TodoBox","children","initalTodos","todoReducer","state","action","type","concat","todo","map","id","done","filter","Error","TodoStateContext","createContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","useReducer","dispatch","nextId","useRef","Provider","value","useTodoState","context","useContext","useTodoDispatch","TodoHeaderBox","TodoHeader","undoneTasks","today","Date","dateString","toLocaleDateString","year","month","day","dayName","weekday","className","length","Remove","CheckCircle","props","css","Text","TodoItemBox","React","memo","text","onClick","TodoListBox","TodoList","todos","key","CircleButton","button","open","InsertFormPositioner","InsertForm","form","Input","input","useState","setOpen","setValue","useTodoNextId","onSubmit","e","preventDefault","current","placeholder","autoFocus","onChange","target","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f54e0af5.chunk.js","sourcesContent":["import {createGlobalStyle} from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    body {\r\n        background: #e0ecef;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoBoxBlock = styled.div`\r\n    width: 512px;\r\n    height: 768px;\r\n    \r\n    position: relative;\r\n    background: #fff;\r\n    border-radius: 16px;\r\n    box-shadow: 0 0 8px rgba(0,0,0,0.04);\r\n    \r\n    margin: 96px auto 32px;\r\n    \r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nfunction TodoBox({children}){\r\n    return <TodoBoxBlock>{children}</TodoBoxBlock>\r\n}\r\n\r\nexport default TodoBox;","import React , {useReducer, createContext, useContext, useRef} from 'react';\r\n\r\nconst initalTodos = [];\r\n\r\nfunction todoReducer(state, action){\r\n    switch (action.type){\r\n        case 'CREATE':\r\n            return state.concat(action.todo);\r\n        case 'TOGGLE':\r\n            return state.map(\r\n                todo => todo.id === action.id ? {...todo, done: !todo.done} : todo\r\n            );\r\n        case 'REMOVE':\r\n            return state.filter(todo => todo.id !== action.id);\r\n        default:\r\n            throw new Error(`에러가 발생했습니다. ${action.type}`)\r\n    }\r\n}\r\n\r\nconst TodoStateContext = createContext();\r\nconst TodoDispatchContext = createContext();\r\nconst TodoNextIdContext = createContext();\r\n\r\nexport function TodoProvider({children}){\r\n    const [state, dispatch] = useReducer(todoReducer, initalTodos);\r\n    const nextId = useRef(5);\r\n    return (\r\n        <TodoStateContext.Provider value={state}>\r\n            <TodoDispatchContext.Provider value={dispatch}>\r\n                <TodoNextIdContext.Provider value={nextId}>\r\n                    {children}\r\n                </TodoNextIdContext.Provider>\r\n            </TodoDispatchContext.Provider>\r\n        </TodoStateContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useTodoState(){\r\n    const context = useContext(TodoStateContext);\r\n    if(!context){\r\n        throw new Error('Error!');\r\n    }\r\n    return context;\r\n}\r\n\r\nexport function useTodoDispatch(){\r\n    const context = useContext(TodoDispatchContext);\r\n    if(!context){\r\n        throw new Error('Error!');\r\n    }\r\n    return context;\r\n}\r\n\r\nexport function useTodoNextId(){\r\n    const context = useContext(TodoNextIdContext);\r\n    if(!context){\r\n        throw new Error('Error!');\r\n    }\r\n    return context;\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {useTodoState} from \"../TodoContext\";\r\n\r\nconst TodoHeaderBox = styled.div`\r\n    padding: 48px 32px 24px;\r\n    border-bottom: 1px solid #e9ecef;\r\n    h1 {\r\n        margin: 0;\r\n        font-size: 36px;\r\n        color: #343a40;\r\n    }\r\n    .day {\r\n        margin: 4px 0 0;\r\n        color: #868e96;\r\n        font-size: 21px;\r\n    }\r\n    \r\n    .tasks-left {\r\n        color: #20c997;\r\n        font-size: 18px;\r\n        margin-top: 40px;\r\n        font-weight: 600;\r\n    }\r\n`;\r\n\r\nfunction TodoHeader(){\r\n    const todos = useTodoState();\r\n    const undoneTasks = todos.filter(todo => !todo.done);\r\n\r\n    const today = new Date();\r\n    const dateString = today.toLocaleDateString('ko-KR', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric'\r\n    });\r\n    const dayName = today.toLocaleDateString('ko-KR', {\r\n        weekday: 'long'\r\n    });\r\n    return (\r\n        <TodoHeaderBox>\r\n            <h1>{dateString}</h1>\r\n            <div className=\"day\">{dayName}</div>\r\n            <div className=\"tasks-left\">할 일 {undoneTasks.length}개 남음</div>\r\n        </TodoHeaderBox>\r\n    )\r\n}\r\n\r\nexport default TodoHeader;","import React from 'react';\r\nimport styled, {css} from 'styled-components';\r\nimport {MdDone, MdDelete} from 'react-icons/md';\r\nimport {useTodoDispatch} from \"../TodoContext\";\r\n\r\nconst Remove = styled.div`\r\n    opacity: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #dee2e6;\r\n    font-size: 24px;\r\n    cursor: pointer;\r\n    &:hover {\r\n        color: #ff6b6b;\r\n    }\r\n`;\r\nconst CheckCircle = styled.div`\r\n    width: 32px;\r\n    height: 32px;\r\n    border-radius: 50%;\r\n    border: 1px solid #ced4da;\r\n    font-size: 24px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-right: 20px;\r\n    cursor: pointer;\r\n    ${props => props.done && css`\r\n        border: 1px solid #38d9a9;\r\n        color: #38d9a9;\r\n    `}\r\n`;\r\nconst Text = styled.div`\r\n    flex:1;\r\n    font-size: 21px;\r\n    color: #495057;\r\n    ${ props=>props.done && css`\r\n        color: #ced4da;\r\n    `}\r\n`;\r\nconst TodoItemBox = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 12px 0;\r\n    &:hover {\r\n        ${Remove}{\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nfunction TodoItem({id, done, text}) {\r\n    const dispatch = useTodoDispatch();\r\n    const onToggle = () => dispatch({\r\n        type: 'TOGGLE',\r\n        id\r\n    });\r\n    const onRemove = () => dispatch({\r\n        type: 'REMOVE',\r\n        id\r\n    });\r\n    return (\r\n        <TodoItemBox>\r\n            <CheckCircle done={done} onClick={onToggle}>{done && <MdDone />}</CheckCircle>\r\n            <Text done={done}>{text}</Text>\r\n            <Remove onClick={onRemove}>\r\n                <MdDelete/>\r\n            </Remove>\r\n        </TodoItemBox>\r\n    )\r\n}\r\n\r\nexport default React.memo(TodoItem);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport TodoItem from './TodoItem';\r\nimport {useTodoState} from \"../TodoContext\";\r\n\r\nconst TodoListBox = styled.div`\r\n    flex: 1;\r\n    padding: 20px 32px 48px;\r\n    overflow-y: auto;\r\n`;\r\n\r\nfunction TodoList(){\r\n    const todos = useTodoState();\r\n    return(\r\n        <TodoListBox>\r\n            {todos.map(\r\n                todo=><TodoItem\r\n                key={todo.id}\r\n                id={todo.id}\r\n                text={todo.text}\r\n                done={todo.done}\r\n                />\r\n            )}\r\n        </TodoListBox>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import React, {useState} from 'react';\r\nimport styled, {css} from 'styled-components';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport {useTodoDispatch, useTodoNextId} from \"../TodoContext\";\r\n\r\nconst CircleButton = styled.button`\r\n    background: #38d9a9;\r\n    &:hover{\r\n        background: #63e6be;\r\n    }\r\n    &:active{\r\n        background: #20c997;\r\n    }\r\n    \r\n    z-index: 5;\r\n    cursor: pointer;\r\n    width: 80px;\r\n    height: 80px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    \r\n    position: absolute;\r\n    left: 50%;\r\n    bottom: 0;\r\n    transform: translate(-50%, 50%);\r\n    \r\n    font-size: 60px;\r\n    color: #fff;\r\n    border-radius: 40px;\r\n    \r\n    border: none;\r\n    outline: none;\r\n    transition: 0.125s all ease-in;\r\n    ${props => props.open && css`\r\n        background: #ff6b6b;\r\n        &:hover {\r\n          background: #ff8787;\r\n        }\r\n        &:active {\r\n            background: #fa5252;\r\n        }\r\n        transform: translate(-50%,50%) rotate(45deg);\r\n    `}\r\n`;\r\n\r\nconst InsertFormPositioner = styled.div`\r\n    width: 100%;\r\n    bottom:0;\r\n    left: 0;\r\n    position: absolute;\r\n`;\r\n\r\n\r\nconst InsertForm = styled.form`\r\n    background: #f8f9fa;\r\n    padding: 32px 32px 72px;\r\n    border-bottom-left-radius: 16px;\r\n    border-bottom-right-radius: 16px;\r\n    border-top: 1px solid #e0ecef;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    padding: 12px;\r\n    border-radius: 4px;\r\n    border: 1px solid #dee2e6;\r\n    width: 100%;\r\n    outline: none;\r\n    font-size: 18px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nfunction TodoCreate() {\r\n    const [open, setOpen] = useState(false);\r\n    const [value, setValue] = useState('');\r\n    const dispatch = useTodoDispatch();\r\n    const nextId = useTodoNextId();\r\n\r\n    const onToggle = () => setOpen(!open);\r\n    const onChange = e => setValue(e.target.value);\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch({\r\n            type: 'CREATE',\r\n            todo: {\r\n                id: nextId.current,\r\n                text: value,\r\n                done: false\r\n            }\r\n        });\r\n        setValue('');\r\n        setOpen(false);\r\n        nextId.current += 1;\r\n    };\r\n\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n            {open && (\r\n                <InsertFormPositioner>\r\n                    <InsertForm onSubmit={onSubmit}>\r\n                        <Input placeholder=\"할 일을 입력 후, Enter 를 누르세요\" autoFocus onChange={onChange} value={value}/>\r\n                    </InsertForm>\r\n                </InsertFormPositioner>\r\n            )}\r\n            <CircleButton onClick={onToggle} open={open}>\r\n                <MdAdd/>\r\n            </CircleButton>\r\n        </>\r\n        )\r\n}\r\n\r\nexport default React.memo(TodoCreate);","import React from 'react';\nimport Global from './GlobalStyles';\nimport TodoBox from \"./Components/TodoBox\";\nimport TodoHeader from \"./Components/TodoHeader\";\nimport TodoList from \"./Components/TodoList\";\nimport TodoCreate from \"./Components/TodoCreate\";\nimport {TodoProvider} from \"./TodoContext\";\n\nfunction App() {\n  return (\n      <TodoProvider>\n        <Global />\n        <TodoBox>\n            <TodoHeader/>\n            <TodoList/>\n            <TodoCreate/>\n        </TodoBox>\n      </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}